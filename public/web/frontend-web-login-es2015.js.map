{"version":3,"sources":["/opt/app/libs/web/login/src/index.ts","/opt/app/libs/web/login/src/lib/login/login.component.scss","/opt/app/libs/web/login/src/lib/login/login.component.ts","/opt/app/libs/web/login/src/lib/web-login.module.ts","/opt/app/libs/web/login/src/lib/login/login.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAuC;;;;;;;;;;;;;ACAvC;AAAe,uEAAQ,iBAAiB,GAAG,cAAc,iBAAiB,GAAG,uBAAuB,iBAAiB,iCAAiC,GAAG,8BAA8B,gBAAgB,GAAG,kBAAkB,sBAAsB,oBAAoB,kBAAkB,2BAA2B,wBAAwB,GAAG,YAAY,uBAAuB,8BAA8B,GAAG,6CAA6C,+pDAA+pD,E;;;;;;;;;;;;;;;;;;;;;;ACC5iE;AACO;AACI;AACpB;AACkB;AACrB;AAOtC,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,0EAAkB;IAKpD,YACU,UAAsB,EACtB,WAAwB,EACxB,MAAc;QAEtB,KAAK,EAAE,CAAC;QAJA,eAAU,GAAV,UAAU,CAAY;QACtB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAPxB,UAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAE9B,cAAS,GAAG,EAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC;IAQxD,CAAC;IAED,QAAQ;IACR,CAAC;IAEK,IAAI,CAAC,SAAc;;YACvB;;;;;;;;;;;;;;oBAcQ;YAER,+EAA+E;YAE/E,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;iBACZ,SAAS,CAAC,MAAM,CAAC,EAAE;gBAClB,IAAI,MAAM,EAAE;oBACV,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC;oBAErC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC/B,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC;oBACrC,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;oBACjC,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;oBACzC,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;iBACxC;qBAAM;oBACL,KAAK,CAAC,aAAa,CAAC;iBACrB;YACH,CAAC,CAAC;QACN,CAAC;KAAA;CACF;;YA9CuB,sEAAU;YACT,wEAAW;YAChB,sDAAM;;AARb,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kPAAqC;;KAEtC,CAAC;mFAOsB,sEAAU;QACT,wEAAW;QAChB,sDAAM;GARb,cAAc,CAoD1B;AApD0B;;;;;;;;;;;;;;;;;;;;;;;ACbc;AACM;AACU;AACF;AACM;AACV;AAEnD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAc;KAC1B;CACF;AAYD,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAG;AAAjB,cAAc;IAT1B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,gEAAa;YACb,0EAAkB;YAClB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,qEAAc,CAAC;KAC/B,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;ACxB3B;AAAe,0LAA2H,6BAA6B,oMAAoM,8BAA8B,6KAA6K,0XAA0X,gCAAgC,qLAAqL,kaAAka,gCAAgC,sPAAsP,wBAAwB,GAAG,E","file":"frontend-web-login-es2015.js","sourcesContent":["export * from './lib/web-login.module';\n","export default \":host {\\n  height: 100%;\\n}\\n\\n.content {\\n  height: 100%;\\n}\\n\\n.content mat-card {\\n  width: 350px;\\n  padding: 40px 40px 10px 40px;\\n}\\n\\n.content mat-card button {\\n  width: 100%;\\n}\\n\\n.admin-title {\\n  margin-top: 2.5em;\\n  font-size: 10px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.visit {\\n  margin: 10px 0 0 0;\\n  background-color: #666c8e;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9vcHQvYXBwL2xpYnMvd2ViL2xvZ2luL3NyYy9saWIvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJsaWJzL3dlYi9sb2dpbi9zcmMvbGliL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQ0NGOztBREVBO0VBQ0UsWUFBQTtBQ0NGOztBRENFO0VBQ0UsWUFBQTtFQUNBLDRCQUFBO0FDQ0o7O0FEQ0k7RUFDRSxXQUFBO0FDQ047O0FESUE7RUFDRSxpQkFBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtBQ0RGOztBREtBO0VBQ0Usa0JBQUE7RUFDQSx5QkFBQTtBQ0ZGIiwiZmlsZSI6ImxpYnMvd2ViL2xvZ2luL3NyYy9saWIvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uY29udGVudCB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG5cclxuICBtYXQtY2FyZHtcclxuICAgIHdpZHRoOiAzNTBweDtcclxuICAgIHBhZGRpbmc6IDQwcHggNDBweCAxMHB4IDQwcHg7XHJcblxyXG4gICAgYnV0dG9uIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uYWRtaW4tdGl0bGUge1xyXG4gIG1hcmdpbi10b3A6IDIuNWVtO1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuXHJcbi52aXNpdCB7XHJcbiAgbWFyZ2luOiAxMHB4IDAgMCAwIDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjY2YzhlO1xyXG59XHJcbiIsIjpob3N0IHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uY29udGVudCB7XG4gIGhlaWdodDogMTAwJTtcbn1cbi5jb250ZW50IG1hdC1jYXJkIHtcbiAgd2lkdGg6IDM1MHB4O1xuICBwYWRkaW5nOiA0MHB4IDQwcHggMTBweCA0MHB4O1xufVxuLmNvbnRlbnQgbWF0LWNhcmQgYnV0dG9uIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5hZG1pbi10aXRsZSB7XG4gIG1hcmdpbi10b3A6IDIuNWVtO1xuICBmb250LXNpemU6IDEwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi52aXNpdCB7XG4gIG1hcmdpbjogMTBweCAwIDAgMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY2NmM4ZTtcbn0iXX0= */\";","import { async } from '@angular/core/testing';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthFacade } from '@frontend/common/auth/state';\nimport { LoginBaseComponent } from '@frontend/common/shared';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@frontend/common/auth/shared';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'web-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends LoginBaseComponent implements OnInit {\n  user$ = this.authFacade.user$;\n\n  visitUser = {userId: \"scott666\", password: \"scott666\" };\n\n  constructor(\n    private authFacade: AuthFacade,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n  async send(formValue: any) {\n    /*   super.login().subscribe( async result=> {\n\n       const user = await this.authService.login(result.data).toPromise();\n       console.log('-------',user)\n\n         if(user){\n          this.authFacade.login(result.data);\n          this.router.navigate(['home']);\n          localStorage.setItem('token', user.access_token);\n          console.log(user)\n         }else {\n           alert(\"ERROR\")\n         }\n\n      }); */\n\n    // const user = await this.authService.login(this.formGroup.value).toPromise();\n\n    const value = formValue ? formValue : this.formGroup.value;\n    this.authFacade.login(value).\n      pipe(take(1))\n      .subscribe(result => {\n        if (result) {\n          const { id, userId, token } = result;\n\n          this.router.navigate(['home']);\n          console.log(\"11111111111111\", result)\n          sessionStorage.setItem('id', id);\n          sessionStorage.setItem('userId', userId);\n          sessionStorage.setItem('token', token);\n        } else {\n          alert(\"error Login\")\n        }\n      })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonSharedModule } from '@frontend/common/shared';\nimport { WebCoreModule } from '@frontend/web/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n  }\n]\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    WebCoreModule,\n    CommonSharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginComponent]\n})\nexport class WebLoginModule {}\n","export default \"\\n<div class=\\\"content\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around center\\\" >\\n  <mat-card>\\n    <mat-card-title>{{ 'login.title' | translate }}</mat-card-title>\\n\\n    <form [formGroup]=\\\"formGroup\\\" *ngIf=\\\"formGroup\\\" class=\\\"example-form\\\" fxLayout=\\\"column\\\">\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-label>{{ 'login.userId' | translate }}</mat-label>\\n        <input type=\\\"text\\\" matInput formControlName=\\\"userId\\\">\\n        <mat-error>\\n          <ng-container *ngFor=\\\"let formError of formErrors['userId']; let index = index\\\">\\n            <common-form-error-message ngDefaultControl\\n              [formControl]=\\\"formGroup.controls['userId']\\\"\\n              [formError]=\\\"formError\\\"\\n            ></common-form-error-message>\\n          </ng-container>\\n        </mat-error>\\n      </mat-form-field>\\n\\n\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-label>{{ 'login.password' | translate }}</mat-label>\\n        <input type=\\\"password\\\" matInput formControlName=\\\"password\\\">\\n        <mat-error>\\n          <ng-container *ngFor=\\\"let formError of formErrors['password']; let index = index\\\">\\n            <common-form-error-message ngDefaultControl\\n              [formControl]=\\\"formGroup.controls['password']\\\"\\n              [formError]=\\\"formError\\\"\\n            ></common-form-error-message>\\n          </ng-container>\\n        </mat-error>\\n      </mat-form-field>\\n    </form>\\n\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!formGroup.valid\\\" (click)=\\\"send()\\\">{{ 'system.confirm' | translate }}</button>\\n\\n    <button class=\\\"visit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!formGroup.valid\\\" (click)=\\\"send(visitUser)\\\">訪客登入</button>\\n\\n    <span class=\\\"admin-title\\\">From ScoTT Admin 1.0</span>\\n  </mat-card>\\n\\n\\n</div>\\n\\n{{  user$ | async | json}}\\n\";"],"sourceRoot":"webpack:///"}