{"version":3,"sources":["webpack:////opt/app/libs/web/login/src/index.ts","webpack:////opt/app/libs/web/login/src/lib/login/login.component.scss","webpack:////opt/app/libs/web/login/src/lib/login/login.component.ts","webpack:////opt/app/libs/web/login/src/lib/web-login.module.ts","webpack:////opt/app/libs/web/login/src/lib/login/login.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAuC;;;;;;;;;;;;ACAvC,yBAAyB,iBAAiB,GAAG,cAAc,iBAAiB,GAAG,uBAAuB,iBAAiB,iCAAiC,GAAG,8BAA8B,gBAAgB,GAAG,kBAAkB,sBAAsB,oBAAoB,kBAAkB,2BAA2B,wBAAwB,GAAG,6CAA6C,26C;;;;;;;;;;;;;;;;;;;;ACA3U;AACO;AACI;AACpB;AAOzC,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,0EAAkB;IAGpD,YACS,UAAsB,EACtB,MAAc;QAErB,KAAK,EAAE,CAAC;QAHD,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAQ;QAJvB,UAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;IAO7B,CAAC;IAEF,QAAQ;IACR,CAAC;IAED,IAAI;QACF,KAAK,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,MAAM,GAAE;YAC9B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/B,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAjBsB,sEAAU;YACd,sDAAM;;AALZ,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,wKAAqC;;KAEtC,CAAC;2EAKqB,sEAAU;QACd,sDAAM;GALZ,cAAc,CAqB1B;AArB0B;;;;;;;;;;;;;;;;;;;;;;;ACVc;AACM;AACU;AACF;AACM;AACV;AAEnD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAc;KAC1B;CACF;AAYD,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAG;AAAjB,cAAc;IAT1B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,gEAAa;YACb,0EAAkB;YAClB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,qEAAc,CAAC;KAC/B,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;ACxB3B,4IAA4I,6BAA6B,oMAAoM,8BAA8B,6KAA6K,0XAA0X,gCAAgC,qLAAqL,kaAAka,gCAAgC,yGAAyG,wBAAwB,G","file":"frontend-web-login-es2015.js","sourcesContent":["export * from './lib/web-login.module';\n","module.exports = \":host {\\n  height: 100%;\\n}\\n\\n.content {\\n  height: 100%;\\n}\\n\\n.content mat-card {\\n  width: 350px;\\n  padding: 40px 40px 10px 40px;\\n}\\n\\n.content mat-card button {\\n  width: 100%;\\n}\\n\\n.admin-title {\\n  margin-top: 2.5em;\\n  font-size: 10px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9vcHQvYXBwL2xpYnMvd2ViL2xvZ2luL3NyYy9saWIvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJsaWJzL3dlYi9sb2dpbi9zcmMvbGliL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQ0NGOztBREVBO0VBQ0UsWUFBQTtBQ0NGOztBRENFO0VBQ0UsWUFBQTtFQUNBLDRCQUFBO0FDQ0o7O0FEQ0k7RUFDRSxXQUFBO0FDQ047O0FESUE7RUFDRSxpQkFBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtBQ0RGIiwiZmlsZSI6ImxpYnMvd2ViL2xvZ2luL3NyYy9saWIvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uY29udGVudCB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG5cclxuICBtYXQtY2FyZHtcclxuICAgIHdpZHRoOiAzNTBweDtcclxuICAgIHBhZGRpbmc6IDQwcHggNDBweCAxMHB4IDQwcHg7XHJcblxyXG4gICAgYnV0dG9uIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uYWRtaW4tdGl0bGUge1xyXG4gIG1hcmdpbi10b3A6IDIuNWVtO1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG4iLCI6aG9zdCB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmNvbnRlbnQge1xuICBoZWlnaHQ6IDEwMCU7XG59XG4uY29udGVudCBtYXQtY2FyZCB7XG4gIHdpZHRoOiAzNTBweDtcbiAgcGFkZGluZzogNDBweCA0MHB4IDEwcHggNDBweDtcbn1cbi5jb250ZW50IG1hdC1jYXJkIGJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uYWRtaW4tdGl0bGUge1xuICBtYXJnaW4tdG9wOiAyLjVlbTtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthFacade } from '@frontend/common/auth/state';\nimport { LoginBaseComponent } from '@frontend/common/shared';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'web-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends LoginBaseComponent implements OnInit {\n  user$ = this.authFacade.user$;\n\n  constructor(\n   private authFacade: AuthFacade,\n   private router: Router\n  ) {\n    super();\n   }\n\n  ngOnInit() {\n  }\n\n  send() {\n    super.login().subscribe(result=> {\n      console.log(result)\n      this.authFacade.login(result.data);\n      this.router.navigate(['home']);\n      localStorage.setItem('user', \"OK\");\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonSharedModule } from '@frontend/common/shared';\nimport { WebCoreModule } from '@frontend/web/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n  }\n]\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    WebCoreModule,\n    CommonSharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginComponent]\n})\nexport class WebLoginModule {}\n","module.exports = \"\\n<div class=\\\"content\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around center\\\" >\\n  <mat-card>\\n    <mat-card-title>{{ 'login.title' | translate }}</mat-card-title>\\n\\n    <form [formGroup]=\\\"formGroup\\\" *ngIf=\\\"formGroup\\\" class=\\\"example-form\\\" fxLayout=\\\"column\\\">\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-label>{{ 'login.userId' | translate }}</mat-label>\\n        <input type=\\\"text\\\" matInput formControlName=\\\"userId\\\">\\n        <mat-error>\\n          <ng-container *ngFor=\\\"let formError of formErrors['userId']; let index = index\\\">\\n            <common-form-error-message ngDefaultControl\\n              [formControl]=\\\"formGroup.controls['userId']\\\"\\n              [formError]=\\\"formError\\\"\\n            ></common-form-error-message>\\n          </ng-container>\\n        </mat-error>\\n      </mat-form-field>\\n\\n\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-label>{{ 'login.password' | translate }}</mat-label>\\n        <input type=\\\"password\\\" matInput formControlName=\\\"password\\\">\\n        <mat-error>\\n          <ng-container *ngFor=\\\"let formError of formErrors['password']; let index = index\\\">\\n            <common-form-error-message ngDefaultControl\\n              [formControl]=\\\"formGroup.controls['password']\\\"\\n              [formError]=\\\"formError\\\"\\n            ></common-form-error-message>\\n          </ng-container>\\n        </mat-error>\\n      </mat-form-field>\\n    </form>\\n\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!formGroup.valid\\\" (click)=\\\"send()\\\">{{ 'system.confirm' | translate }}</button>\\n\\n    <span class=\\\"admin-title\\\">From ScoTT Admin 1.0</span>\\n  </mat-card>\\n\\n\\n</div>\\n\\n{{  user$ | async | json}}\\n\""],"sourceRoot":""}